version: '3.7'

services:
  apache:
    build: .docker/apache
    container_name: api_pokemon2_apache
    ports:
      - '80'
    volumes:
      - .:/var/www/app:cached
    depends_on:
      - php
    networks:
      - backend

  mysql:
    image: mysql:latest
    container_name: api_pokemon2_mysql
    ports:
      - '3306'
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: DIgNauTITiTApHEct
      MYSQL_DATABASE: api_pokemon2
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    volumes:
      - ./.docker/data/mysql:/var/lib/mysql
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--lower_case_table_names=1"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: api_pokemon2_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - '80'
    links:
      - mysql
    networks:
      - backend

  php:
    build:
      context: .docker/php
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
    container_name: api_pokemon2_php
    volumes:
      - .:/var/www/app:cached
    depends_on:
      - mysql
    networks:
      - backend

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  backend:

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
